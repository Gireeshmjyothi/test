@Service
public class SftpClientService {

    @Value("${sftp.host}")
    private String host;

    @Value("${sftp.port}")
    private int port;

    @Value("${sftp.username}")
    private String username;

    @Value("${sftp.password}")
    private String password;

    @Value("${sftp.remote.base-dir}")
    private String baseDir;

    public void uploadFile(byte[] fileBytes, String remotePath, String fileName) {
        ChannelSftp channelSftp = null;
        Session session = null;

        try {
            JSch jsch = new JSch();
            session = jsch.getSession(username, host, port);
            session.setPassword(password);
            session.setConfig("StrictHostKeyChecking", "no");
            session.connect();

            channelSftp = (ChannelSftp) session.openChannel("sftp");
            channelSftp.connect();

            String fullPath = baseDir + "/" + remotePath;
            ensureRemotePathExists(channelSftp, fullPath);

            channelSftp.cd(fullPath);
            channelSftp.put(new ByteArrayInputStream(fileBytes), fileName);

        } catch (Exception e) {
            throw new RuntimeException("SFTP Upload Failed", e);
        } finally {
            if (channelSftp != null) channelSftp.disconnect();
            if (session != null) session.disconnect();
        }
    }

    private void ensureRemotePathExists(ChannelSftp sftp, String path) throws SftpException {
        String[] folders = path.split("/");
        StringBuilder currentPath = new StringBuilder();

        for (String folder : folders) {
            if (folder.isEmpty()) continue;

            currentPath.append("/").append(folder);
            if (!directoryExists(sftp, currentPath.toString())) {
                sftp.mkdir(currentPath.toString());
            }
        }
    }

    private boolean directoryExists(ChannelSftp sftp, String path) {
        try {
            SftpATTRS attrs = sftp.lstat(path);
            return attrs != null && attrs.isDir();
        } catch (SftpException e) {
            return false; // Path doesn't exist
        }
    }
}
